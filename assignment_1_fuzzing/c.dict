var_a="a "
assign_a="a= "
literal="1 "
endstatement=";"
forloop="for(int z=0; z < 100; z++)"
block_star="{"
block_end="}"
return= "return a"
function= "int func()"
OP_ARROW="->"
OP_A_ADD="+="
OP_A_AND="&="
OP_A_DIV="/="
OP_A_MOD="%="
OP_A_MUL="*="
OP_A_OR="|="
OP_A_SAL="<<="
OP_A_SAR=">>="
OP_A_SUB="-="
OP_A_XOR="^="
OP_DEC="--"
OP_EQ="=="
OP_GE=">="
OP_INC="++"
OP_LE="<="
OP_LOGAND="&&"
OP_LOGOR="||"
OP_NE="!="
OP_SAL="<<"
OP_SAR=">>"
KALIGNAS="_Alignas"
KALIGNOF="_Alignof"
KAUTO="auto"
KBOOL="_Bool"
KBREAK="break"
KCASE="case"
KCHAR="char"
KCOMPLEX="_Complex"
KCONST="const"
KCONTINUE="continue"
KDEFAULT="default"
KDO="do"
KDOUBLE="double"
KELSE="else"
KENUM="enum"
KEXTERN="extern"
KFLOAT="float"
KFOR="for"
KGENERIC="_Generic"
KGOTO="goto"
KIF="if"
KIMAGINARY="_Imaginary"
KINLINE="inline"
KINT="int"
KLONG="long"
KNORETURN="_Noreturn"
KREGISTER="register"
KRESTRICT="restrict"
KRETURN="return"
KHASHHASH="##"
KSHORT="short"
KSIGNED="signed"
KSIZEOF="sizeof"
KSTATIC="static"
KSTATIC_ASSERT="_Static_assert"
KSTRUCT="struct"
KSWITCH="switch"
KELLIPSIS="..."
KTYPEDEF="typedef"
KTYPEOF="typeof"
KUNION="union"
KUNSIGNED="unsigned"
KVOID="void"
KVOLATILE="volatile"
KWHILE="while"
